// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DAOWithdrawNounsFromEscrow extends ethereum.Event {
  get params(): DAOWithdrawNounsFromEscrow__Params {
    return new DAOWithdrawNounsFromEscrow__Params(this);
  }
}

export class DAOWithdrawNounsFromEscrow__Params {
  _event: DAOWithdrawNounsFromEscrow;

  constructor(event: DAOWithdrawNounsFromEscrow) {
    this._event = event;
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ERC20TokensToIncludeInForkSet extends ethereum.Event {
  get params(): ERC20TokensToIncludeInForkSet__Params {
    return new ERC20TokensToIncludeInForkSet__Params(this);
  }
}

export class ERC20TokensToIncludeInForkSet__Params {
  _event: ERC20TokensToIncludeInForkSet;

  constructor(event: ERC20TokensToIncludeInForkSet) {
    this._event = event;
  }

  get oldErc20Tokens(): Array<Address> {
    return this._event.parameters[0].value.toAddressArray();
  }

  get newErc20tokens(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class EscrowedToFork extends ethereum.Event {
  get params(): EscrowedToFork__Params {
    return new EscrowedToFork__Params(this);
  }
}

export class EscrowedToFork__Params {
  _event: EscrowedToFork;

  constructor(event: EscrowedToFork) {
    this._event = event;
  }

  get forkId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get proposalIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class ExecuteFork extends ethereum.Event {
  get params(): ExecuteFork__Params {
    return new ExecuteFork__Params(this);
  }
}

export class ExecuteFork__Params {
  _event: ExecuteFork;

  constructor(event: ExecuteFork) {
    this._event = event;
  }

  get forkId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get forkTreasury(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get forkToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get forkEndTimestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get tokensInEscrow(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ForkDAODeployerSet extends ethereum.Event {
  get params(): ForkDAODeployerSet__Params {
    return new ForkDAODeployerSet__Params(this);
  }
}

export class ForkDAODeployerSet__Params {
  _event: ForkDAODeployerSet;

  constructor(event: ForkDAODeployerSet) {
    this._event = event;
  }

  get oldForkDAODeployer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newForkDAODeployer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ForkPeriodSet extends ethereum.Event {
  get params(): ForkPeriodSet__Params {
    return new ForkPeriodSet__Params(this);
  }
}

export class ForkPeriodSet__Params {
  _event: ForkPeriodSet;

  constructor(event: ForkPeriodSet) {
    this._event = event;
  }

  get oldForkPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForkPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ForkThresholdSet extends ethereum.Event {
  get params(): ForkThresholdSet__Params {
    return new ForkThresholdSet__Params(this);
  }
}

export class ForkThresholdSet__Params {
  _event: ForkThresholdSet;

  constructor(event: ForkThresholdSet) {
    this._event = event;
  }

  get oldForkThreshold(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newForkThreshold(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class JoinFork extends ethereum.Event {
  get params(): JoinFork__Params {
    return new JoinFork__Params(this);
  }
}

export class JoinFork__Params {
  _event: JoinFork;

  constructor(event: JoinFork) {
    this._event = event;
  }

  get forkId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get proposalIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class LastMinuteWindowSet extends ethereum.Event {
  get params(): LastMinuteWindowSet__Params {
    return new LastMinuteWindowSet__Params(this);
  }
}

export class LastMinuteWindowSet__Params {
  _event: LastMinuteWindowSet;

  constructor(event: LastMinuteWindowSet) {
    this._event = event;
  }

  get oldLastMinuteWindowInBlocks(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newLastMinuteWindowInBlocks(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxQuorumVotesBPSSet extends ethereum.Event {
  get params(): MaxQuorumVotesBPSSet__Params {
    return new MaxQuorumVotesBPSSet__Params(this);
  }
}

export class MaxQuorumVotesBPSSet__Params {
  _event: MaxQuorumVotesBPSSet;

  constructor(event: MaxQuorumVotesBPSSet) {
    this._event = event;
  }

  get oldMaxQuorumVotesBPS(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class MinQuorumVotesBPSSet extends ethereum.Event {
  get params(): MinQuorumVotesBPSSet__Params {
    return new MinQuorumVotesBPSSet__Params(this);
  }
}

export class MinQuorumVotesBPSSet__Params {
  _event: MinQuorumVotesBPSSet;

  constructor(event: MinQuorumVotesBPSSet) {
    this._event = event;
  }

  get oldMinQuorumVotesBPS(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class NewAdmin extends ethereum.Event {
  get params(): NewAdmin__Params {
    return new NewAdmin__Params(this);
  }
}

export class NewAdmin__Params {
  _event: NewAdmin;

  constructor(event: NewAdmin) {
    this._event = event;
  }

  get oldAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewImplementation extends ethereum.Event {
  get params(): NewImplementation__Params {
    return new NewImplementation__Params(this);
  }
}

export class NewImplementation__Params {
  _event: NewImplementation;

  constructor(event: NewImplementation) {
    this._event = event;
  }

  get oldImplementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newImplementation(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPendingAdmin extends ethereum.Event {
  get params(): NewPendingAdmin__Params {
    return new NewPendingAdmin__Params(this);
  }
}

export class NewPendingAdmin__Params {
  _event: NewPendingAdmin;

  constructor(event: NewPendingAdmin) {
    this._event = event;
  }

  get oldPendingAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewPendingVetoer extends ethereum.Event {
  get params(): NewPendingVetoer__Params {
    return new NewPendingVetoer__Params(this);
  }
}

export class NewPendingVetoer__Params {
  _event: NewPendingVetoer;

  constructor(event: NewPendingVetoer) {
    this._event = event;
  }

  get oldPendingVetoer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPendingVetoer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NewVetoer extends ethereum.Event {
  get params(): NewVetoer__Params {
    return new NewVetoer__Params(this);
  }
}

export class NewVetoer__Params {
  _event: NewVetoer;

  constructor(event: NewVetoer) {
    this._event = event;
  }

  get oldVetoer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newVetoer(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ObjectionPeriodDurationSet extends ethereum.Event {
  get params(): ObjectionPeriodDurationSet__Params {
    return new ObjectionPeriodDurationSet__Params(this);
  }
}

export class ObjectionPeriodDurationSet__Params {
  _event: ObjectionPeriodDurationSet;

  constructor(event: ObjectionPeriodDurationSet) {
    this._event = event;
  }

  get oldObjectionPeriodDurationInBlocks(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newObjectionPeriodDurationInBlocks(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalCanceled extends ethereum.Event {
  get params(): ProposalCanceled__Params {
    return new ProposalCanceled__Params(this);
  }
}

export class ProposalCanceled__Params {
  _event: ProposalCanceled;

  constructor(event: ProposalCanceled) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreated extends ethereum.Event {
  get params(): ProposalCreated__Params {
    return new ProposalCreated__Params(this);
  }
}

export class ProposalCreated__Params {
  _event: ProposalCreated;

  constructor(event: ProposalCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get startBlock(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[8].value.toString();
  }
}

export class ProposalCreatedOnTimelockV1 extends ethereum.Event {
  get params(): ProposalCreatedOnTimelockV1__Params {
    return new ProposalCreatedOnTimelockV1__Params(this);
  }
}

export class ProposalCreatedOnTimelockV1__Params {
  _event: ProposalCreatedOnTimelockV1;

  constructor(event: ProposalCreatedOnTimelockV1) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalCreatedWithRequirements extends ethereum.Event {
  get params(): ProposalCreatedWithRequirements__Params {
    return new ProposalCreatedWithRequirements__Params(this);
  }
}

export class ProposalCreatedWithRequirements__Params {
  _event: ProposalCreatedWithRequirements;

  constructor(event: ProposalCreatedWithRequirements) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get signers(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get targets(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[5].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[6].value.toBytesArray();
  }

  get startBlock(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get updatePeriodEndBlock(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }

  get quorumVotes(): BigInt {
    return this._event.parameters[11].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[12].value.toString();
  }
}

export class ProposalCreatedWithRequirements1 extends ethereum.Event {
  get params(): ProposalCreatedWithRequirements1__Params {
    return new ProposalCreatedWithRequirements1__Params(this);
  }
}

export class ProposalCreatedWithRequirements1__Params {
  _event: ProposalCreatedWithRequirements1;

  constructor(event: ProposalCreatedWithRequirements1) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get startBlock(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get endBlock(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get proposalThreshold(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get quorumVotes(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get description(): string {
    return this._event.parameters[10].value.toString();
  }
}

export class ProposalDescriptionUpdated extends ethereum.Event {
  get params(): ProposalDescriptionUpdated__Params {
    return new ProposalDescriptionUpdated__Params(this);
  }
}

export class ProposalDescriptionUpdated__Params {
  _event: ProposalDescriptionUpdated;

  constructor(event: ProposalDescriptionUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get updateMessage(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ProposalExecuted extends ethereum.Event {
  get params(): ProposalExecuted__Params {
    return new ProposalExecuted__Params(this);
  }
}

export class ProposalExecuted__Params {
  _event: ProposalExecuted;

  constructor(event: ProposalExecuted) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProposalObjectionPeriodSet extends ethereum.Event {
  get params(): ProposalObjectionPeriodSet__Params {
    return new ProposalObjectionPeriodSet__Params(this);
  }
}

export class ProposalObjectionPeriodSet__Params {
  _event: ProposalObjectionPeriodSet;

  constructor(event: ProposalObjectionPeriodSet) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get objectionPeriodEndBlock(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalQueued extends ethereum.Event {
  get params(): ProposalQueued__Params {
    return new ProposalQueued__Params(this);
  }
}

export class ProposalQueued__Params {
  _event: ProposalQueued;

  constructor(event: ProposalQueued) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get eta(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalThresholdBPSSet extends ethereum.Event {
  get params(): ProposalThresholdBPSSet__Params {
    return new ProposalThresholdBPSSet__Params(this);
  }
}

export class ProposalThresholdBPSSet__Params {
  _event: ProposalThresholdBPSSet;

  constructor(event: ProposalThresholdBPSSet) {
    this._event = event;
  }

  get oldProposalThresholdBPS(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newProposalThresholdBPS(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalTransactionsUpdated extends ethereum.Event {
  get params(): ProposalTransactionsUpdated__Params {
    return new ProposalTransactionsUpdated__Params(this);
  }
}

export class ProposalTransactionsUpdated__Params {
  _event: ProposalTransactionsUpdated;

  constructor(event: ProposalTransactionsUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get updateMessage(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class ProposalUpdatablePeriodSet extends ethereum.Event {
  get params(): ProposalUpdatablePeriodSet__Params {
    return new ProposalUpdatablePeriodSet__Params(this);
  }
}

export class ProposalUpdatablePeriodSet__Params {
  _event: ProposalUpdatablePeriodSet;

  constructor(event: ProposalUpdatablePeriodSet) {
    this._event = event;
  }

  get oldProposalUpdatablePeriodInBlocks(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newProposalUpdatablePeriodInBlocks(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ProposalUpdated extends ethereum.Event {
  get params(): ProposalUpdated__Params {
    return new ProposalUpdated__Params(this);
  }
}

export class ProposalUpdated__Params {
  _event: ProposalUpdated;

  constructor(event: ProposalUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get targets(): Array<Address> {
    return this._event.parameters[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._event.parameters[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._event.parameters[5].value.toBytesArray();
  }

  get description(): string {
    return this._event.parameters[6].value.toString();
  }

  get updateMessage(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class ProposalVetoed extends ethereum.Event {
  get params(): ProposalVetoed__Params {
    return new ProposalVetoed__Params(this);
  }
}

export class ProposalVetoed__Params {
  _event: ProposalVetoed;

  constructor(event: ProposalVetoed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class QuorumCoefficientSet extends ethereum.Event {
  get params(): QuorumCoefficientSet__Params {
    return new QuorumCoefficientSet__Params(this);
  }
}

export class QuorumCoefficientSet__Params {
  _event: QuorumCoefficientSet;

  constructor(event: QuorumCoefficientSet) {
    this._event = event;
  }

  get oldQuorumCoefficient(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newQuorumCoefficient(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class QuorumVotesBPSSet extends ethereum.Event {
  get params(): QuorumVotesBPSSet__Params {
    return new QuorumVotesBPSSet__Params(this);
  }
}

export class QuorumVotesBPSSet__Params {
  _event: QuorumVotesBPSSet;

  constructor(event: QuorumVotesBPSSet) {
    this._event = event;
  }

  get oldQuorumVotesBPS(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newQuorumVotesBPS(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RefundableVote extends ethereum.Event {
  get params(): RefundableVote__Params {
    return new RefundableVote__Params(this);
  }
}

export class RefundableVote__Params {
  _event: RefundableVote;

  constructor(event: RefundableVote) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get refundAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get refundSent(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class SignatureCancelled extends ethereum.Event {
  get params(): SignatureCancelled__Params {
    return new SignatureCancelled__Params(this);
  }
}

export class SignatureCancelled__Params {
  _event: SignatureCancelled;

  constructor(event: SignatureCancelled) {
    this._event = event;
  }

  get signer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get sig(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TimelocksAndAdminSet extends ethereum.Event {
  get params(): TimelocksAndAdminSet__Params {
    return new TimelocksAndAdminSet__Params(this);
  }
}

export class TimelocksAndAdminSet__Params {
  _event: TimelocksAndAdminSet;

  constructor(event: TimelocksAndAdminSet) {
    this._event = event;
  }

  get timelock(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get timelockV1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get admin(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VoteCast extends ethereum.Event {
  get params(): VoteCast__Params {
    return new VoteCast__Params(this);
  }
}

export class VoteCast__Params {
  _event: VoteCast;

  constructor(event: VoteCast) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get support(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get votes(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get reason(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class VoteSnapshotBlockSwitchProposalIdSet extends ethereum.Event {
  get params(): VoteSnapshotBlockSwitchProposalIdSet__Params {
    return new VoteSnapshotBlockSwitchProposalIdSet__Params(this);
  }
}

export class VoteSnapshotBlockSwitchProposalIdSet__Params {
  _event: VoteSnapshotBlockSwitchProposalIdSet;

  constructor(event: VoteSnapshotBlockSwitchProposalIdSet) {
    this._event = event;
  }

  get oldVoteSnapshotBlockSwitchProposalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVoteSnapshotBlockSwitchProposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VotingDelaySet extends ethereum.Event {
  get params(): VotingDelaySet__Params {
    return new VotingDelaySet__Params(this);
  }
}

export class VotingDelaySet__Params {
  _event: VotingDelaySet;

  constructor(event: VotingDelaySet) {
    this._event = event;
  }

  get oldVotingDelay(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVotingDelay(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class VotingPeriodSet extends ethereum.Event {
  get params(): VotingPeriodSet__Params {
    return new VotingPeriodSet__Params(this);
  }
}

export class VotingPeriodSet__Params {
  _event: VotingPeriodSet;

  constructor(event: VotingPeriodSet) {
    this._event = event;
  }

  get oldVotingPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newVotingPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sent(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class WithdrawFromForkEscrow extends ethereum.Event {
  get params(): WithdrawFromForkEscrow__Params {
    return new WithdrawFromForkEscrow__Params(this);
  }
}

export class WithdrawFromForkEscrow__Params {
  _event: WithdrawFromForkEscrow;

  constructor(event: WithdrawFromForkEscrow) {
    this._event = event;
  }

  get forkId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class NounsDAO___withdrawResult {
  value0: BigInt;
  value1: boolean;

  constructor(value0: BigInt, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): boolean {
    return this.value1;
  }
}

export class NounsDAO__dynamicQuorumVotesInputParamsStruct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__executeForkResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getForkTreasury(): Address {
    return this.value0;
  }

  getForkToken(): Address {
    return this.value1;
  }
}

export class NounsDAO__getActionsResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: Array<string>;
  value3: Array<Bytes>;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: Array<string>,
    value3: Array<Bytes>
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromStringArray(this.value2));
    map.set("value3", ethereum.Value.fromBytesArray(this.value3));
    return map;
  }

  getTargets(): Array<Address> {
    return this.value0;
  }

  getValues(): Array<BigInt> {
    return this.value1;
  }

  getSignatures(): Array<string> {
    return this.value2;
  }

  getCalldatas(): Array<Bytes> {
    return this.value3;
  }
}

export class NounsDAO__getDynamicQuorumParamsAtResultValue0Struct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__getReceiptResultValue0Struct extends ethereum.Tuple {
  get hasVoted(): boolean {
    return this[0].toBoolean();
  }

  get support(): i32 {
    return this[1].toI32();
  }

  get votes(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__proposalsResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get proposer(): Address {
    return this[1].toAddress();
  }

  get proposalThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get quorumVotes(): BigInt {
    return this[3].toBigInt();
  }

  get eta(): BigInt {
    return this[4].toBigInt();
  }

  get startBlock(): BigInt {
    return this[5].toBigInt();
  }

  get endBlock(): BigInt {
    return this[6].toBigInt();
  }

  get forVotes(): BigInt {
    return this[7].toBigInt();
  }

  get againstVotes(): BigInt {
    return this[8].toBigInt();
  }

  get abstainVotes(): BigInt {
    return this[9].toBigInt();
  }

  get canceled(): boolean {
    return this[10].toBoolean();
  }

  get vetoed(): boolean {
    return this[11].toBoolean();
  }

  get executed(): boolean {
    return this[12].toBoolean();
  }

  get totalSupply(): BigInt {
    return this[13].toBigInt();
  }

  get creationBlock(): BigInt {
    return this[14].toBigInt();
  }
}

export class NounsDAO__proposalsV3ResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get proposer(): Address {
    return this[1].toAddress();
  }

  get proposalThreshold(): BigInt {
    return this[2].toBigInt();
  }

  get quorumVotes(): BigInt {
    return this[3].toBigInt();
  }

  get eta(): BigInt {
    return this[4].toBigInt();
  }

  get startBlock(): BigInt {
    return this[5].toBigInt();
  }

  get endBlock(): BigInt {
    return this[6].toBigInt();
  }

  get forVotes(): BigInt {
    return this[7].toBigInt();
  }

  get againstVotes(): BigInt {
    return this[8].toBigInt();
  }

  get abstainVotes(): BigInt {
    return this[9].toBigInt();
  }

  get canceled(): boolean {
    return this[10].toBoolean();
  }

  get vetoed(): boolean {
    return this[11].toBoolean();
  }

  get executed(): boolean {
    return this[12].toBoolean();
  }

  get totalSupply(): BigInt {
    return this[13].toBigInt();
  }

  get creationBlock(): BigInt {
    return this[14].toBigInt();
  }

  get signers(): Array<Address> {
    return this[15].toAddressArray();
  }

  get updatePeriodEndBlock(): BigInt {
    return this[16].toBigInt();
  }

  get objectionPeriodEndBlock(): BigInt {
    return this[17].toBigInt();
  }

  get executeOnTimelockV1(): boolean {
    return this[18].toBoolean();
  }
}

export class NounsDAO__proposeBySigsInputProposerSignaturesStruct extends ethereum.Tuple {
  get sig(): Bytes {
    return this[0].toBytes();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get expirationTimestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__quorumParamsCheckpointsResultValue0Struct extends ethereum.Tuple {
  get fromBlock(): BigInt {
    return this[0].toBigInt();
  }

  get params(): NounsDAO__quorumParamsCheckpointsResultValue0ParamsStruct {
    return changetype<
      NounsDAO__quorumParamsCheckpointsResultValue0ParamsStruct
    >(this[1].toTuple());
  }
}

export class NounsDAO__quorumParamsCheckpointsResultValue0ParamsStruct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO__quorumParamsCheckpoints1ResultValue0Struct extends ethereum.Tuple {
  get fromBlock(): BigInt {
    return this[0].toBigInt();
  }

  get params(): NounsDAO__quorumParamsCheckpoints1ResultValue0ParamsStruct {
    return changetype<
      NounsDAO__quorumParamsCheckpoints1ResultValue0ParamsStruct
    >(this[1].toTuple());
  }
}

export class NounsDAO__quorumParamsCheckpoints1ResultValue0ParamsStruct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class NounsDAO extends ethereum.SmartContract {
  static bind(address: Address): NounsDAO {
    return new NounsDAO("NounsDAO", address);
  }

  MAX_PROPOSAL_THRESHOLD_BPS(): BigInt {
    let result = super.call(
      "MAX_PROPOSAL_THRESHOLD_BPS",
      "MAX_PROPOSAL_THRESHOLD_BPS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_PROPOSAL_THRESHOLD_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_PROPOSAL_THRESHOLD_BPS",
      "MAX_PROPOSAL_THRESHOLD_BPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_VOTING_DELAY(): BigInt {
    let result = super.call(
      "MAX_VOTING_DELAY",
      "MAX_VOTING_DELAY():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTING_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTING_DELAY",
      "MAX_VOTING_DELAY():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MAX_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_VOTING_PERIOD",
      "MAX_VOTING_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_PROPOSAL_THRESHOLD_BPS(): BigInt {
    let result = super.call(
      "MIN_PROPOSAL_THRESHOLD_BPS",
      "MIN_PROPOSAL_THRESHOLD_BPS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_PROPOSAL_THRESHOLD_BPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_PROPOSAL_THRESHOLD_BPS",
      "MIN_PROPOSAL_THRESHOLD_BPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_VOTING_DELAY(): BigInt {
    let result = super.call(
      "MIN_VOTING_DELAY",
      "MIN_VOTING_DELAY():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_VOTING_DELAY(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_VOTING_DELAY",
      "MIN_VOTING_DELAY():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MIN_VOTING_PERIOD(): BigInt {
    let result = super.call(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_VOTING_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_VOTING_PERIOD",
      "MIN_VOTING_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _withdraw(): NounsDAO___withdrawResult {
    let result = super.call("_withdraw", "_withdraw():(uint256,bool)", []);

    return new NounsDAO___withdrawResult(
      result[0].toBigInt(),
      result[1].toBoolean()
    );
  }

  try__withdraw(): ethereum.CallResult<NounsDAO___withdrawResult> {
    let result = super.tryCall("_withdraw", "_withdraw():(uint256,bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO___withdrawResult(value[0].toBigInt(), value[1].toBoolean())
    );
  }

  adjustedTotalSupply(): BigInt {
    let result = super.call(
      "adjustedTotalSupply",
      "adjustedTotalSupply():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_adjustedTotalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "adjustedTotalSupply",
      "adjustedTotalSupply():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dynamicQuorumVotes(
    againstVotes: BigInt,
    totalSupply: BigInt,
    params: NounsDAO__dynamicQuorumVotesInputParamsStruct
  ): BigInt {
    let result = super.call(
      "dynamicQuorumVotes",
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32)):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(againstVotes),
        ethereum.Value.fromUnsignedBigInt(totalSupply),
        ethereum.Value.fromTuple(params)
      ]
    );

    return result[0].toBigInt();
  }

  try_dynamicQuorumVotes(
    againstVotes: BigInt,
    totalSupply: BigInt,
    params: NounsDAO__dynamicQuorumVotesInputParamsStruct
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dynamicQuorumVotes",
      "dynamicQuorumVotes(uint256,uint256,(uint16,uint16,uint32)):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(againstVotes),
        ethereum.Value.fromUnsignedBigInt(totalSupply),
        ethereum.Value.fromTuple(params)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  erc20TokensToIncludeInFork(): Array<Address> {
    let result = super.call(
      "erc20TokensToIncludeInFork",
      "erc20TokensToIncludeInFork():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_erc20TokensToIncludeInFork(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "erc20TokensToIncludeInFork",
      "erc20TokensToIncludeInFork():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  executeFork(): NounsDAO__executeForkResult {
    let result = super.call(
      "executeFork",
      "executeFork():(address,address)",
      []
    );

    return new NounsDAO__executeForkResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_executeFork(): ethereum.CallResult<NounsDAO__executeForkResult> {
    let result = super.tryCall(
      "executeFork",
      "executeFork():(address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO__executeForkResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  forkDAODeployer(): Address {
    let result = super.call(
      "forkDAODeployer",
      "forkDAODeployer():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_forkDAODeployer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "forkDAODeployer",
      "forkDAODeployer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  forkEndTimestamp(): BigInt {
    let result = super.call(
      "forkEndTimestamp",
      "forkEndTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_forkEndTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forkEndTimestamp",
      "forkEndTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  forkEscrow(): Address {
    let result = super.call("forkEscrow", "forkEscrow():(address)", []);

    return result[0].toAddress();
  }

  try_forkEscrow(): ethereum.CallResult<Address> {
    let result = super.tryCall("forkEscrow", "forkEscrow():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  forkPeriod(): BigInt {
    let result = super.call("forkPeriod", "forkPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_forkPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("forkPeriod", "forkPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  forkThreshold(): BigInt {
    let result = super.call("forkThreshold", "forkThreshold():(uint256)", []);

    return result[0].toBigInt();
  }

  try_forkThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forkThreshold",
      "forkThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  forkThresholdBPS(): BigInt {
    let result = super.call(
      "forkThresholdBPS",
      "forkThresholdBPS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_forkThresholdBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "forkThresholdBPS",
      "forkThresholdBPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getActions(proposalId: BigInt): NounsDAO__getActionsResult {
    let result = super.call(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return new NounsDAO__getActionsResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toStringArray(),
      result[3].toBytesArray()
    );
  }

  try_getActions(
    proposalId: BigInt
  ): ethereum.CallResult<NounsDAO__getActionsResult> {
    let result = super.tryCall(
      "getActions",
      "getActions(uint256):(address[],uint256[],string[],bytes[])",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NounsDAO__getActionsResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toStringArray(),
        value[3].toBytesArray()
      )
    );
  }

  getDynamicQuorumParamsAt(
    blockNumber_: BigInt
  ): NounsDAO__getDynamicQuorumParamsAtResultValue0Struct {
    let result = super.call(
      "getDynamicQuorumParamsAt",
      "getDynamicQuorumParamsAt(uint256):((uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(blockNumber_)]
    );

    return changetype<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getDynamicQuorumParamsAt(
    blockNumber_: BigInt
  ): ethereum.CallResult<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct> {
    let result = super.tryCall(
      "getDynamicQuorumParamsAt",
      "getDynamicQuorumParamsAt(uint256):((uint16,uint16,uint32))",
      [ethereum.Value.fromUnsignedBigInt(blockNumber_)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__getDynamicQuorumParamsAtResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getReceipt(
    proposalId: BigInt,
    voter: Address
  ): NounsDAO__getReceiptResultValue0Struct {
    let result = super.call(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint96))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );

    return changetype<NounsDAO__getReceiptResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getReceipt(
    proposalId: BigInt,
    voter: Address
  ): ethereum.CallResult<NounsDAO__getReceiptResultValue0Struct> {
    let result = super.tryCall(
      "getReceipt",
      "getReceipt(uint256,address):((bool,uint8,uint96))",
      [
        ethereum.Value.fromUnsignedBigInt(proposalId),
        ethereum.Value.fromAddress(voter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__getReceiptResultValue0Struct>(value[0].toTuple())
    );
  }

  lastMinuteWindowInBlocks(): BigInt {
    let result = super.call(
      "lastMinuteWindowInBlocks",
      "lastMinuteWindowInBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastMinuteWindowInBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastMinuteWindowInBlocks",
      "lastMinuteWindowInBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  latestProposalIds(account: Address): BigInt {
    let result = super.call(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_latestProposalIds(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestProposalIds",
      "latestProposalIds(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxQuorumVotes(): BigInt {
    let result = super.call("maxQuorumVotes", "maxQuorumVotes():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxQuorumVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxQuorumVotes",
      "maxQuorumVotes():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minQuorumVotes(): BigInt {
    let result = super.call("minQuorumVotes", "minQuorumVotes():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minQuorumVotes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "minQuorumVotes",
      "minQuorumVotes():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nouns(): Address {
    let result = super.call("nouns", "nouns():(address)", []);

    return result[0].toAddress();
  }

  try_nouns(): ethereum.CallResult<Address> {
    let result = super.tryCall("nouns", "nouns():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  numTokensInForkEscrow(): BigInt {
    let result = super.call(
      "numTokensInForkEscrow",
      "numTokensInForkEscrow():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_numTokensInForkEscrow(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "numTokensInForkEscrow",
      "numTokensInForkEscrow():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  objectionPeriodDurationInBlocks(): BigInt {
    let result = super.call(
      "objectionPeriodDurationInBlocks",
      "objectionPeriodDurationInBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_objectionPeriodDurationInBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "objectionPeriodDurationInBlocks",
      "objectionPeriodDurationInBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pendingVetoer(): Address {
    let result = super.call("pendingVetoer", "pendingVetoer():(address)", []);

    return result[0].toAddress();
  }

  try_pendingVetoer(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "pendingVetoer",
      "pendingVetoer():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposalCount(): BigInt {
    let result = super.call("proposalCount", "proposalCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_proposalCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalCount",
      "proposalCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalMaxOperations(): BigInt {
    let result = super.call(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalMaxOperations(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalMaxOperations",
      "proposalMaxOperations():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalThreshold(): BigInt {
    let result = super.call(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalThreshold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThreshold",
      "proposalThreshold():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalThresholdBPS(): BigInt {
    let result = super.call(
      "proposalThresholdBPS",
      "proposalThresholdBPS():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalThresholdBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalThresholdBPS",
      "proposalThresholdBPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposalUpdatablePeriodInBlocks(): BigInt {
    let result = super.call(
      "proposalUpdatablePeriodInBlocks",
      "proposalUpdatablePeriodInBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_proposalUpdatablePeriodInBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposalUpdatablePeriodInBlocks",
      "proposalUpdatablePeriodInBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposals(proposalId: BigInt): NounsDAO__proposalsResultValue0Struct {
    let result = super.call(
      "proposals",
      "proposals(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return changetype<NounsDAO__proposalsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_proposals(
    proposalId: BigInt
  ): ethereum.CallResult<NounsDAO__proposalsResultValue0Struct> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__proposalsResultValue0Struct>(value[0].toTuple())
    );
  }

  proposalsV3(proposalId: BigInt): NounsDAO__proposalsV3ResultValue0Struct {
    let result = super.call(
      "proposalsV3",
      "proposalsV3(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256,address[],uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );

    return changetype<NounsDAO__proposalsV3ResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_proposalsV3(
    proposalId: BigInt
  ): ethereum.CallResult<NounsDAO__proposalsV3ResultValue0Struct> {
    let result = super.tryCall(
      "proposalsV3",
      "proposalsV3(uint256):((uint256,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bool,bool,bool,uint256,uint256,address[],uint256,uint256,bool))",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__proposalsV3ResultValue0Struct>(value[0].toTuple())
    );
  }

  propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): BigInt {
    let result = super.call(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );

    return result[0].toBigInt();
  }

  try_propose(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "propose",
      "propose(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposeBySigs(
    proposerSignatures: Array<
      NounsDAO__proposeBySigsInputProposerSignaturesStruct
    >,
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): BigInt {
    let result = super.call(
      "proposeBySigs",
      "proposeBySigs((bytes,address,uint256)[],address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromTupleArray(proposerSignatures),
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );

    return result[0].toBigInt();
  }

  try_proposeBySigs(
    proposerSignatures: Array<
      NounsDAO__proposeBySigsInputProposerSignaturesStruct
    >,
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposeBySigs",
      "proposeBySigs((bytes,address,uint256)[],address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromTupleArray(proposerSignatures),
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proposeOnTimelockV1(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): BigInt {
    let result = super.call(
      "proposeOnTimelockV1",
      "proposeOnTimelockV1(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );

    return result[0].toBigInt();
  }

  try_proposeOnTimelockV1(
    targets: Array<Address>,
    values: Array<BigInt>,
    signatures: Array<string>,
    calldatas: Array<Bytes>,
    description: string
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "proposeOnTimelockV1",
      "proposeOnTimelockV1(address[],uint256[],string[],bytes[],string):(uint256)",
      [
        ethereum.Value.fromAddressArray(targets),
        ethereum.Value.fromUnsignedBigIntArray(values),
        ethereum.Value.fromStringArray(signatures),
        ethereum.Value.fromBytesArray(calldatas),
        ethereum.Value.fromString(description)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quorumParamsCheckpoints(): Array<
    NounsDAO__quorumParamsCheckpointsResultValue0Struct
  > {
    let result = super.call(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints():((uint32,(uint16,uint16,uint32))[])",
      []
    );

    return result[0].toTupleArray<
      NounsDAO__quorumParamsCheckpointsResultValue0Struct
    >();
  }

  try_quorumParamsCheckpoints(): ethereum.CallResult<
    Array<NounsDAO__quorumParamsCheckpointsResultValue0Struct>
  > {
    let result = super.tryCall(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints():((uint32,(uint16,uint16,uint32))[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        NounsDAO__quorumParamsCheckpointsResultValue0Struct
      >()
    );
  }

  quorumParamsCheckpoints1(
    index: BigInt
  ): NounsDAO__quorumParamsCheckpoints1ResultValue0Struct {
    let result = super.call(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints(uint256):((uint32,(uint16,uint16,uint32)))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );

    return changetype<NounsDAO__quorumParamsCheckpoints1ResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_quorumParamsCheckpoints1(
    index: BigInt
  ): ethereum.CallResult<NounsDAO__quorumParamsCheckpoints1ResultValue0Struct> {
    let result = super.tryCall(
      "quorumParamsCheckpoints",
      "quorumParamsCheckpoints(uint256):((uint32,(uint16,uint16,uint32)))",
      [ethereum.Value.fromUnsignedBigInt(index)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NounsDAO__quorumParamsCheckpoints1ResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  quorumVotes(proposalId: BigInt): BigInt {
    let result = super.call("quorumVotes", "quorumVotes(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);

    return result[0].toBigInt();
  }

  try_quorumVotes(proposalId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quorumVotes",
      "quorumVotes(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(proposalId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  quorumVotesBPS(): BigInt {
    let result = super.call("quorumVotesBPS", "quorumVotesBPS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_quorumVotesBPS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "quorumVotesBPS",
      "quorumVotesBPS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  state(proposalId: BigInt): i32 {
    let result = super.call("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);

    return result[0].toI32();
  }

  try_state(proposalId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("state", "state(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(proposalId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  timelock(): Address {
    let result = super.call("timelock", "timelock():(address)", []);

    return result[0].toAddress();
  }

  try_timelock(): ethereum.CallResult<Address> {
    let result = super.tryCall("timelock", "timelock():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timelockV1(): Address {
    let result = super.call("timelockV1", "timelockV1():(address)", []);

    return result[0].toAddress();
  }

  try_timelockV1(): ethereum.CallResult<Address> {
    let result = super.tryCall("timelockV1", "timelockV1():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vetoer(): Address {
    let result = super.call("vetoer", "vetoer():(address)", []);

    return result[0].toAddress();
  }

  try_vetoer(): ethereum.CallResult<Address> {
    let result = super.tryCall("vetoer", "vetoer():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  voteSnapshotBlockSwitchProposalId(): BigInt {
    let result = super.call(
      "voteSnapshotBlockSwitchProposalId",
      "voteSnapshotBlockSwitchProposalId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_voteSnapshotBlockSwitchProposalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "voteSnapshotBlockSwitchProposalId",
      "voteSnapshotBlockSwitchProposalId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingDelay(): BigInt {
    let result = super.call("votingDelay", "votingDelay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingDelay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingDelay", "votingDelay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingPeriod(): BigInt {
    let result = super.call("votingPeriod", "votingPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_votingPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("votingPeriod", "votingPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class _acceptAdminCall extends ethereum.Call {
  get inputs(): _acceptAdminCall__Inputs {
    return new _acceptAdminCall__Inputs(this);
  }

  get outputs(): _acceptAdminCall__Outputs {
    return new _acceptAdminCall__Outputs(this);
  }
}

export class _acceptAdminCall__Inputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptAdminCall__Outputs {
  _call: _acceptAdminCall;

  constructor(call: _acceptAdminCall) {
    this._call = call;
  }
}

export class _acceptVetoerCall extends ethereum.Call {
  get inputs(): _acceptVetoerCall__Inputs {
    return new _acceptVetoerCall__Inputs(this);
  }

  get outputs(): _acceptVetoerCall__Outputs {
    return new _acceptVetoerCall__Outputs(this);
  }
}

export class _acceptVetoerCall__Inputs {
  _call: _acceptVetoerCall;

  constructor(call: _acceptVetoerCall) {
    this._call = call;
  }
}

export class _acceptVetoerCall__Outputs {
  _call: _acceptVetoerCall;

  constructor(call: _acceptVetoerCall) {
    this._call = call;
  }
}

export class _burnVetoPowerCall extends ethereum.Call {
  get inputs(): _burnVetoPowerCall__Inputs {
    return new _burnVetoPowerCall__Inputs(this);
  }

  get outputs(): _burnVetoPowerCall__Outputs {
    return new _burnVetoPowerCall__Outputs(this);
  }
}

export class _burnVetoPowerCall__Inputs {
  _call: _burnVetoPowerCall;

  constructor(call: _burnVetoPowerCall) {
    this._call = call;
  }
}

export class _burnVetoPowerCall__Outputs {
  _call: _burnVetoPowerCall;

  constructor(call: _burnVetoPowerCall) {
    this._call = call;
  }
}

export class _setDynamicQuorumParamsCall extends ethereum.Call {
  get inputs(): _setDynamicQuorumParamsCall__Inputs {
    return new _setDynamicQuorumParamsCall__Inputs(this);
  }

  get outputs(): _setDynamicQuorumParamsCall__Outputs {
    return new _setDynamicQuorumParamsCall__Outputs(this);
  }
}

export class _setDynamicQuorumParamsCall__Inputs {
  _call: _setDynamicQuorumParamsCall;

  constructor(call: _setDynamicQuorumParamsCall) {
    this._call = call;
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get newQuorumCoefficient(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class _setDynamicQuorumParamsCall__Outputs {
  _call: _setDynamicQuorumParamsCall;

  constructor(call: _setDynamicQuorumParamsCall) {
    this._call = call;
  }
}

export class _setErc20TokensToIncludeInForkCall extends ethereum.Call {
  get inputs(): _setErc20TokensToIncludeInForkCall__Inputs {
    return new _setErc20TokensToIncludeInForkCall__Inputs(this);
  }

  get outputs(): _setErc20TokensToIncludeInForkCall__Outputs {
    return new _setErc20TokensToIncludeInForkCall__Outputs(this);
  }
}

export class _setErc20TokensToIncludeInForkCall__Inputs {
  _call: _setErc20TokensToIncludeInForkCall;

  constructor(call: _setErc20TokensToIncludeInForkCall) {
    this._call = call;
  }

  get erc20tokens(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class _setErc20TokensToIncludeInForkCall__Outputs {
  _call: _setErc20TokensToIncludeInForkCall;

  constructor(call: _setErc20TokensToIncludeInForkCall) {
    this._call = call;
  }
}

export class _setForkDAODeployerCall extends ethereum.Call {
  get inputs(): _setForkDAODeployerCall__Inputs {
    return new _setForkDAODeployerCall__Inputs(this);
  }

  get outputs(): _setForkDAODeployerCall__Outputs {
    return new _setForkDAODeployerCall__Outputs(this);
  }
}

export class _setForkDAODeployerCall__Inputs {
  _call: _setForkDAODeployerCall;

  constructor(call: _setForkDAODeployerCall) {
    this._call = call;
  }

  get newForkDAODeployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setForkDAODeployerCall__Outputs {
  _call: _setForkDAODeployerCall;

  constructor(call: _setForkDAODeployerCall) {
    this._call = call;
  }
}

export class _setForkEscrowCall extends ethereum.Call {
  get inputs(): _setForkEscrowCall__Inputs {
    return new _setForkEscrowCall__Inputs(this);
  }

  get outputs(): _setForkEscrowCall__Outputs {
    return new _setForkEscrowCall__Outputs(this);
  }
}

export class _setForkEscrowCall__Inputs {
  _call: _setForkEscrowCall;

  constructor(call: _setForkEscrowCall) {
    this._call = call;
  }

  get newForkEscrow(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setForkEscrowCall__Outputs {
  _call: _setForkEscrowCall;

  constructor(call: _setForkEscrowCall) {
    this._call = call;
  }
}

export class _setForkParamsCall extends ethereum.Call {
  get inputs(): _setForkParamsCall__Inputs {
    return new _setForkParamsCall__Inputs(this);
  }

  get outputs(): _setForkParamsCall__Outputs {
    return new _setForkParamsCall__Outputs(this);
  }
}

export class _setForkParamsCall__Inputs {
  _call: _setForkParamsCall;

  constructor(call: _setForkParamsCall) {
    this._call = call;
  }

  get forkEscrow_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get forkDAODeployer_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get erc20TokensToIncludeInFork_(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get forkPeriod_(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get forkThresholdBPS_(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class _setForkParamsCall__Outputs {
  _call: _setForkParamsCall;

  constructor(call: _setForkParamsCall) {
    this._call = call;
  }
}

export class _setForkPeriodCall extends ethereum.Call {
  get inputs(): _setForkPeriodCall__Inputs {
    return new _setForkPeriodCall__Inputs(this);
  }

  get outputs(): _setForkPeriodCall__Outputs {
    return new _setForkPeriodCall__Outputs(this);
  }
}

export class _setForkPeriodCall__Inputs {
  _call: _setForkPeriodCall;

  constructor(call: _setForkPeriodCall) {
    this._call = call;
  }

  get newForkPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setForkPeriodCall__Outputs {
  _call: _setForkPeriodCall;

  constructor(call: _setForkPeriodCall) {
    this._call = call;
  }
}

export class _setForkThresholdBPSCall extends ethereum.Call {
  get inputs(): _setForkThresholdBPSCall__Inputs {
    return new _setForkThresholdBPSCall__Inputs(this);
  }

  get outputs(): _setForkThresholdBPSCall__Outputs {
    return new _setForkThresholdBPSCall__Outputs(this);
  }
}

export class _setForkThresholdBPSCall__Inputs {
  _call: _setForkThresholdBPSCall;

  constructor(call: _setForkThresholdBPSCall) {
    this._call = call;
  }

  get newForkThresholdBPS(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setForkThresholdBPSCall__Outputs {
  _call: _setForkThresholdBPSCall;

  constructor(call: _setForkThresholdBPSCall) {
    this._call = call;
  }
}

export class _setLastMinuteWindowInBlocksCall extends ethereum.Call {
  get inputs(): _setLastMinuteWindowInBlocksCall__Inputs {
    return new _setLastMinuteWindowInBlocksCall__Inputs(this);
  }

  get outputs(): _setLastMinuteWindowInBlocksCall__Outputs {
    return new _setLastMinuteWindowInBlocksCall__Outputs(this);
  }
}

export class _setLastMinuteWindowInBlocksCall__Inputs {
  _call: _setLastMinuteWindowInBlocksCall;

  constructor(call: _setLastMinuteWindowInBlocksCall) {
    this._call = call;
  }

  get newLastMinuteWindowInBlocks(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setLastMinuteWindowInBlocksCall__Outputs {
  _call: _setLastMinuteWindowInBlocksCall;

  constructor(call: _setLastMinuteWindowInBlocksCall) {
    this._call = call;
  }
}

export class _setMaxQuorumVotesBPSCall extends ethereum.Call {
  get inputs(): _setMaxQuorumVotesBPSCall__Inputs {
    return new _setMaxQuorumVotesBPSCall__Inputs(this);
  }

  get outputs(): _setMaxQuorumVotesBPSCall__Outputs {
    return new _setMaxQuorumVotesBPSCall__Outputs(this);
  }
}

export class _setMaxQuorumVotesBPSCall__Inputs {
  _call: _setMaxQuorumVotesBPSCall;

  constructor(call: _setMaxQuorumVotesBPSCall) {
    this._call = call;
  }

  get newMaxQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class _setMaxQuorumVotesBPSCall__Outputs {
  _call: _setMaxQuorumVotesBPSCall;

  constructor(call: _setMaxQuorumVotesBPSCall) {
    this._call = call;
  }
}

export class _setMinQuorumVotesBPSCall extends ethereum.Call {
  get inputs(): _setMinQuorumVotesBPSCall__Inputs {
    return new _setMinQuorumVotesBPSCall__Inputs(this);
  }

  get outputs(): _setMinQuorumVotesBPSCall__Outputs {
    return new _setMinQuorumVotesBPSCall__Outputs(this);
  }
}

export class _setMinQuorumVotesBPSCall__Inputs {
  _call: _setMinQuorumVotesBPSCall;

  constructor(call: _setMinQuorumVotesBPSCall) {
    this._call = call;
  }

  get newMinQuorumVotesBPS(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class _setMinQuorumVotesBPSCall__Outputs {
  _call: _setMinQuorumVotesBPSCall;

  constructor(call: _setMinQuorumVotesBPSCall) {
    this._call = call;
  }
}

export class _setObjectionPeriodDurationInBlocksCall extends ethereum.Call {
  get inputs(): _setObjectionPeriodDurationInBlocksCall__Inputs {
    return new _setObjectionPeriodDurationInBlocksCall__Inputs(this);
  }

  get outputs(): _setObjectionPeriodDurationInBlocksCall__Outputs {
    return new _setObjectionPeriodDurationInBlocksCall__Outputs(this);
  }
}

export class _setObjectionPeriodDurationInBlocksCall__Inputs {
  _call: _setObjectionPeriodDurationInBlocksCall;

  constructor(call: _setObjectionPeriodDurationInBlocksCall) {
    this._call = call;
  }

  get newObjectionPeriodDurationInBlocks(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setObjectionPeriodDurationInBlocksCall__Outputs {
  _call: _setObjectionPeriodDurationInBlocksCall;

  constructor(call: _setObjectionPeriodDurationInBlocksCall) {
    this._call = call;
  }
}

export class _setPendingAdminCall extends ethereum.Call {
  get inputs(): _setPendingAdminCall__Inputs {
    return new _setPendingAdminCall__Inputs(this);
  }

  get outputs(): _setPendingAdminCall__Outputs {
    return new _setPendingAdminCall__Outputs(this);
  }
}

export class _setPendingAdminCall__Inputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }

  get newPendingAdmin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setPendingAdminCall__Outputs {
  _call: _setPendingAdminCall;

  constructor(call: _setPendingAdminCall) {
    this._call = call;
  }
}

export class _setPendingVetoerCall extends ethereum.Call {
  get inputs(): _setPendingVetoerCall__Inputs {
    return new _setPendingVetoerCall__Inputs(this);
  }

  get outputs(): _setPendingVetoerCall__Outputs {
    return new _setPendingVetoerCall__Outputs(this);
  }
}

export class _setPendingVetoerCall__Inputs {
  _call: _setPendingVetoerCall;

  constructor(call: _setPendingVetoerCall) {
    this._call = call;
  }

  get newPendingVetoer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _setPendingVetoerCall__Outputs {
  _call: _setPendingVetoerCall;

  constructor(call: _setPendingVetoerCall) {
    this._call = call;
  }
}

export class _setProposalThresholdBPSCall extends ethereum.Call {
  get inputs(): _setProposalThresholdBPSCall__Inputs {
    return new _setProposalThresholdBPSCall__Inputs(this);
  }

  get outputs(): _setProposalThresholdBPSCall__Outputs {
    return new _setProposalThresholdBPSCall__Outputs(this);
  }
}

export class _setProposalThresholdBPSCall__Inputs {
  _call: _setProposalThresholdBPSCall;

  constructor(call: _setProposalThresholdBPSCall) {
    this._call = call;
  }

  get newProposalThresholdBPS(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setProposalThresholdBPSCall__Outputs {
  _call: _setProposalThresholdBPSCall;

  constructor(call: _setProposalThresholdBPSCall) {
    this._call = call;
  }
}

export class _setProposalUpdatablePeriodInBlocksCall extends ethereum.Call {
  get inputs(): _setProposalUpdatablePeriodInBlocksCall__Inputs {
    return new _setProposalUpdatablePeriodInBlocksCall__Inputs(this);
  }

  get outputs(): _setProposalUpdatablePeriodInBlocksCall__Outputs {
    return new _setProposalUpdatablePeriodInBlocksCall__Outputs(this);
  }
}

export class _setProposalUpdatablePeriodInBlocksCall__Inputs {
  _call: _setProposalUpdatablePeriodInBlocksCall;

  constructor(call: _setProposalUpdatablePeriodInBlocksCall) {
    this._call = call;
  }

  get newProposalUpdatablePeriodInBlocks(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setProposalUpdatablePeriodInBlocksCall__Outputs {
  _call: _setProposalUpdatablePeriodInBlocksCall;

  constructor(call: _setProposalUpdatablePeriodInBlocksCall) {
    this._call = call;
  }
}

export class _setQuorumCoefficientCall extends ethereum.Call {
  get inputs(): _setQuorumCoefficientCall__Inputs {
    return new _setQuorumCoefficientCall__Inputs(this);
  }

  get outputs(): _setQuorumCoefficientCall__Outputs {
    return new _setQuorumCoefficientCall__Outputs(this);
  }
}

export class _setQuorumCoefficientCall__Inputs {
  _call: _setQuorumCoefficientCall;

  constructor(call: _setQuorumCoefficientCall) {
    this._call = call;
  }

  get newQuorumCoefficient(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setQuorumCoefficientCall__Outputs {
  _call: _setQuorumCoefficientCall;

  constructor(call: _setQuorumCoefficientCall) {
    this._call = call;
  }
}

export class _setTimelocksAndAdminCall extends ethereum.Call {
  get inputs(): _setTimelocksAndAdminCall__Inputs {
    return new _setTimelocksAndAdminCall__Inputs(this);
  }

  get outputs(): _setTimelocksAndAdminCall__Outputs {
    return new _setTimelocksAndAdminCall__Outputs(this);
  }
}

export class _setTimelocksAndAdminCall__Inputs {
  _call: _setTimelocksAndAdminCall;

  constructor(call: _setTimelocksAndAdminCall) {
    this._call = call;
  }

  get newTimelock(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newTimelockV1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newAdmin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class _setTimelocksAndAdminCall__Outputs {
  _call: _setTimelocksAndAdminCall;

  constructor(call: _setTimelocksAndAdminCall) {
    this._call = call;
  }
}

export class _setVoteSnapshotBlockSwitchProposalIdCall extends ethereum.Call {
  get inputs(): _setVoteSnapshotBlockSwitchProposalIdCall__Inputs {
    return new _setVoteSnapshotBlockSwitchProposalIdCall__Inputs(this);
  }

  get outputs(): _setVoteSnapshotBlockSwitchProposalIdCall__Outputs {
    return new _setVoteSnapshotBlockSwitchProposalIdCall__Outputs(this);
  }
}

export class _setVoteSnapshotBlockSwitchProposalIdCall__Inputs {
  _call: _setVoteSnapshotBlockSwitchProposalIdCall;

  constructor(call: _setVoteSnapshotBlockSwitchProposalIdCall) {
    this._call = call;
  }
}

export class _setVoteSnapshotBlockSwitchProposalIdCall__Outputs {
  _call: _setVoteSnapshotBlockSwitchProposalIdCall;

  constructor(call: _setVoteSnapshotBlockSwitchProposalIdCall) {
    this._call = call;
  }
}

export class _setVotingDelayCall extends ethereum.Call {
  get inputs(): _setVotingDelayCall__Inputs {
    return new _setVotingDelayCall__Inputs(this);
  }

  get outputs(): _setVotingDelayCall__Outputs {
    return new _setVotingDelayCall__Outputs(this);
  }
}

export class _setVotingDelayCall__Inputs {
  _call: _setVotingDelayCall;

  constructor(call: _setVotingDelayCall) {
    this._call = call;
  }

  get newVotingDelay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setVotingDelayCall__Outputs {
  _call: _setVotingDelayCall;

  constructor(call: _setVotingDelayCall) {
    this._call = call;
  }
}

export class _setVotingPeriodCall extends ethereum.Call {
  get inputs(): _setVotingPeriodCall__Inputs {
    return new _setVotingPeriodCall__Inputs(this);
  }

  get outputs(): _setVotingPeriodCall__Outputs {
    return new _setVotingPeriodCall__Outputs(this);
  }
}

export class _setVotingPeriodCall__Inputs {
  _call: _setVotingPeriodCall;

  constructor(call: _setVotingPeriodCall) {
    this._call = call;
  }

  get newVotingPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class _setVotingPeriodCall__Outputs {
  _call: _setVotingPeriodCall;

  constructor(call: _setVotingPeriodCall) {
    this._call = call;
  }
}

export class _withdrawCall extends ethereum.Call {
  get inputs(): _withdrawCall__Inputs {
    return new _withdrawCall__Inputs(this);
  }

  get outputs(): _withdrawCall__Outputs {
    return new _withdrawCall__Outputs(this);
  }
}

export class _withdrawCall__Inputs {
  _call: _withdrawCall;

  constructor(call: _withdrawCall) {
    this._call = call;
  }
}

export class _withdrawCall__Outputs {
  _call: _withdrawCall;

  constructor(call: _withdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): boolean {
    return this._call.outputValues[1].value.toBoolean();
  }
}

export class CancelCall extends ethereum.Call {
  get inputs(): CancelCall__Inputs {
    return new CancelCall__Inputs(this);
  }

  get outputs(): CancelCall__Outputs {
    return new CancelCall__Outputs(this);
  }
}

export class CancelCall__Inputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelCall__Outputs {
  _call: CancelCall;

  constructor(call: CancelCall) {
    this._call = call;
  }
}

export class CancelSigCall extends ethereum.Call {
  get inputs(): CancelSigCall__Inputs {
    return new CancelSigCall__Inputs(this);
  }

  get outputs(): CancelSigCall__Outputs {
    return new CancelSigCall__Outputs(this);
  }
}

export class CancelSigCall__Inputs {
  _call: CancelSigCall;

  constructor(call: CancelSigCall) {
    this._call = call;
  }

  get sig(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelSigCall__Outputs {
  _call: CancelSigCall;

  constructor(call: CancelSigCall) {
    this._call = call;
  }
}

export class CastRefundableVoteCall extends ethereum.Call {
  get inputs(): CastRefundableVoteCall__Inputs {
    return new CastRefundableVoteCall__Inputs(this);
  }

  get outputs(): CastRefundableVoteCall__Outputs {
    return new CastRefundableVoteCall__Outputs(this);
  }
}

export class CastRefundableVoteCall__Inputs {
  _call: CastRefundableVoteCall;

  constructor(call: CastRefundableVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CastRefundableVoteCall__Outputs {
  _call: CastRefundableVoteCall;

  constructor(call: CastRefundableVoteCall) {
    this._call = call;
  }
}

export class CastRefundableVoteWithReasonCall extends ethereum.Call {
  get inputs(): CastRefundableVoteWithReasonCall__Inputs {
    return new CastRefundableVoteWithReasonCall__Inputs(this);
  }

  get outputs(): CastRefundableVoteWithReasonCall__Outputs {
    return new CastRefundableVoteWithReasonCall__Outputs(this);
  }
}

export class CastRefundableVoteWithReasonCall__Inputs {
  _call: CastRefundableVoteWithReasonCall;

  constructor(call: CastRefundableVoteWithReasonCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CastRefundableVoteWithReasonCall__Outputs {
  _call: CastRefundableVoteWithReasonCall;

  constructor(call: CastRefundableVoteWithReasonCall) {
    this._call = call;
  }
}

export class CastVoteCall extends ethereum.Call {
  get inputs(): CastVoteCall__Inputs {
    return new CastVoteCall__Inputs(this);
  }

  get outputs(): CastVoteCall__Outputs {
    return new CastVoteCall__Outputs(this);
  }
}

export class CastVoteCall__Inputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class CastVoteCall__Outputs {
  _call: CastVoteCall;

  constructor(call: CastVoteCall) {
    this._call = call;
  }
}

export class CastVoteBySigCall extends ethereum.Call {
  get inputs(): CastVoteBySigCall__Inputs {
    return new CastVoteBySigCall__Inputs(this);
  }

  get outputs(): CastVoteBySigCall__Outputs {
    return new CastVoteBySigCall__Outputs(this);
  }
}

export class CastVoteBySigCall__Inputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get v(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class CastVoteBySigCall__Outputs {
  _call: CastVoteBySigCall;

  constructor(call: CastVoteBySigCall) {
    this._call = call;
  }
}

export class CastVoteWithReasonCall extends ethereum.Call {
  get inputs(): CastVoteWithReasonCall__Inputs {
    return new CastVoteWithReasonCall__Inputs(this);
  }

  get outputs(): CastVoteWithReasonCall__Outputs {
    return new CastVoteWithReasonCall__Outputs(this);
  }
}

export class CastVoteWithReasonCall__Inputs {
  _call: CastVoteWithReasonCall;

  constructor(call: CastVoteWithReasonCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get support(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CastVoteWithReasonCall__Outputs {
  _call: CastVoteWithReasonCall;

  constructor(call: CastVoteWithReasonCall) {
    this._call = call;
  }
}

export class EscrowToForkCall extends ethereum.Call {
  get inputs(): EscrowToForkCall__Inputs {
    return new EscrowToForkCall__Inputs(this);
  }

  get outputs(): EscrowToForkCall__Outputs {
    return new EscrowToForkCall__Outputs(this);
  }
}

export class EscrowToForkCall__Inputs {
  _call: EscrowToForkCall;

  constructor(call: EscrowToForkCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get proposalIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class EscrowToForkCall__Outputs {
  _call: EscrowToForkCall;

  constructor(call: EscrowToForkCall) {
    this._call = call;
  }
}

export class ExecuteCall extends ethereum.Call {
  get inputs(): ExecuteCall__Inputs {
    return new ExecuteCall__Inputs(this);
  }

  get outputs(): ExecuteCall__Outputs {
    return new ExecuteCall__Outputs(this);
  }
}

export class ExecuteCall__Inputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteCall__Outputs {
  _call: ExecuteCall;

  constructor(call: ExecuteCall) {
    this._call = call;
  }
}

export class ExecuteForkCall extends ethereum.Call {
  get inputs(): ExecuteForkCall__Inputs {
    return new ExecuteForkCall__Inputs(this);
  }

  get outputs(): ExecuteForkCall__Outputs {
    return new ExecuteForkCall__Outputs(this);
  }
}

export class ExecuteForkCall__Inputs {
  _call: ExecuteForkCall;

  constructor(call: ExecuteForkCall) {
    this._call = call;
  }
}

export class ExecuteForkCall__Outputs {
  _call: ExecuteForkCall;

  constructor(call: ExecuteForkCall) {
    this._call = call;
  }

  get forkTreasury(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get forkToken(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class ExecuteOnTimelockV1Call extends ethereum.Call {
  get inputs(): ExecuteOnTimelockV1Call__Inputs {
    return new ExecuteOnTimelockV1Call__Inputs(this);
  }

  get outputs(): ExecuteOnTimelockV1Call__Outputs {
    return new ExecuteOnTimelockV1Call__Outputs(this);
  }
}

export class ExecuteOnTimelockV1Call__Inputs {
  _call: ExecuteOnTimelockV1Call;

  constructor(call: ExecuteOnTimelockV1Call) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteOnTimelockV1Call__Outputs {
  _call: ExecuteOnTimelockV1Call;

  constructor(call: ExecuteOnTimelockV1Call) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get timelock_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get nouns_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get forkEscrow_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get forkDAODeployer_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get vetoer_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get daoParams_(): InitializeCallDaoParams_Struct {
    return changetype<InitializeCallDaoParams_Struct>(
      this._call.inputValues[5].value.toTuple()
    );
  }

  get dynamicQuorumParams_(): InitializeCallDynamicQuorumParams_Struct {
    return changetype<InitializeCallDynamicQuorumParams_Struct>(
      this._call.inputValues[6].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallDaoParams_Struct extends ethereum.Tuple {
  get votingPeriod(): BigInt {
    return this[0].toBigInt();
  }

  get votingDelay(): BigInt {
    return this[1].toBigInt();
  }

  get proposalThresholdBPS(): BigInt {
    return this[2].toBigInt();
  }

  get lastMinuteWindowInBlocks(): BigInt {
    return this[3].toBigInt();
  }

  get objectionPeriodDurationInBlocks(): BigInt {
    return this[4].toBigInt();
  }

  get proposalUpdatablePeriodInBlocks(): BigInt {
    return this[5].toBigInt();
  }
}

export class InitializeCallDynamicQuorumParams_Struct extends ethereum.Tuple {
  get minQuorumVotesBPS(): i32 {
    return this[0].toI32();
  }

  get maxQuorumVotesBPS(): i32 {
    return this[1].toI32();
  }

  get quorumCoefficient(): BigInt {
    return this[2].toBigInt();
  }
}

export class JoinForkCall extends ethereum.Call {
  get inputs(): JoinForkCall__Inputs {
    return new JoinForkCall__Inputs(this);
  }

  get outputs(): JoinForkCall__Outputs {
    return new JoinForkCall__Outputs(this);
  }
}

export class JoinForkCall__Inputs {
  _call: JoinForkCall;

  constructor(call: JoinForkCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get proposalIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get reason(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class JoinForkCall__Outputs {
  _call: JoinForkCall;

  constructor(call: JoinForkCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProposeBySigsCall extends ethereum.Call {
  get inputs(): ProposeBySigsCall__Inputs {
    return new ProposeBySigsCall__Inputs(this);
  }

  get outputs(): ProposeBySigsCall__Outputs {
    return new ProposeBySigsCall__Outputs(this);
  }
}

export class ProposeBySigsCall__Inputs {
  _call: ProposeBySigsCall;

  constructor(call: ProposeBySigsCall) {
    this._call = call;
  }

  get proposerSignatures(): Array<ProposeBySigsCallProposerSignaturesStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      ProposeBySigsCallProposerSignaturesStruct
    >();
  }

  get targets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class ProposeBySigsCall__Outputs {
  _call: ProposeBySigsCall;

  constructor(call: ProposeBySigsCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProposeBySigsCallProposerSignaturesStruct extends ethereum.Tuple {
  get sig(): Bytes {
    return this[0].toBytes();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get expirationTimestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class ProposeOnTimelockV1Call extends ethereum.Call {
  get inputs(): ProposeOnTimelockV1Call__Inputs {
    return new ProposeOnTimelockV1Call__Inputs(this);
  }

  get outputs(): ProposeOnTimelockV1Call__Outputs {
    return new ProposeOnTimelockV1Call__Outputs(this);
  }
}

export class ProposeOnTimelockV1Call__Inputs {
  _call: ProposeOnTimelockV1Call;

  constructor(call: ProposeOnTimelockV1Call) {
    this._call = call;
  }

  get targets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class ProposeOnTimelockV1Call__Outputs {
  _call: ProposeOnTimelockV1Call;

  constructor(call: ProposeOnTimelockV1Call) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class QueueCall extends ethereum.Call {
  get inputs(): QueueCall__Inputs {
    return new QueueCall__Inputs(this);
  }

  get outputs(): QueueCall__Outputs {
    return new QueueCall__Outputs(this);
  }
}

export class QueueCall__Inputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class QueueCall__Outputs {
  _call: QueueCall;

  constructor(call: QueueCall) {
    this._call = call;
  }
}

export class UpdateProposalCall extends ethereum.Call {
  get inputs(): UpdateProposalCall__Inputs {
    return new UpdateProposalCall__Inputs(this);
  }

  get outputs(): UpdateProposalCall__Outputs {
    return new UpdateProposalCall__Outputs(this);
  }
}

export class UpdateProposalCall__Inputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get targets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[5].value.toString();
  }

  get updateMessage(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class UpdateProposalCall__Outputs {
  _call: UpdateProposalCall;

  constructor(call: UpdateProposalCall) {
    this._call = call;
  }
}

export class UpdateProposalBySigsCall extends ethereum.Call {
  get inputs(): UpdateProposalBySigsCall__Inputs {
    return new UpdateProposalBySigsCall__Inputs(this);
  }

  get outputs(): UpdateProposalBySigsCall__Outputs {
    return new UpdateProposalBySigsCall__Outputs(this);
  }
}

export class UpdateProposalBySigsCall__Inputs {
  _call: UpdateProposalBySigsCall;

  constructor(call: UpdateProposalBySigsCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposerSignatures(): Array<
    UpdateProposalBySigsCallProposerSignaturesStruct
  > {
    return this._call.inputValues[1].value.toTupleArray<
      UpdateProposalBySigsCallProposerSignaturesStruct
    >();
  }

  get targets(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[4].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[5].value.toBytesArray();
  }

  get description(): string {
    return this._call.inputValues[6].value.toString();
  }

  get updateMessage(): string {
    return this._call.inputValues[7].value.toString();
  }
}

export class UpdateProposalBySigsCall__Outputs {
  _call: UpdateProposalBySigsCall;

  constructor(call: UpdateProposalBySigsCall) {
    this._call = call;
  }
}

export class UpdateProposalBySigsCallProposerSignaturesStruct extends ethereum.Tuple {
  get sig(): Bytes {
    return this[0].toBytes();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get expirationTimestamp(): BigInt {
    return this[2].toBigInt();
  }
}

export class UpdateProposalDescriptionCall extends ethereum.Call {
  get inputs(): UpdateProposalDescriptionCall__Inputs {
    return new UpdateProposalDescriptionCall__Inputs(this);
  }

  get outputs(): UpdateProposalDescriptionCall__Outputs {
    return new UpdateProposalDescriptionCall__Outputs(this);
  }
}

export class UpdateProposalDescriptionCall__Inputs {
  _call: UpdateProposalDescriptionCall;

  constructor(call: UpdateProposalDescriptionCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get updateMessage(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateProposalDescriptionCall__Outputs {
  _call: UpdateProposalDescriptionCall;

  constructor(call: UpdateProposalDescriptionCall) {
    this._call = call;
  }
}

export class UpdateProposalTransactionsCall extends ethereum.Call {
  get inputs(): UpdateProposalTransactionsCall__Inputs {
    return new UpdateProposalTransactionsCall__Inputs(this);
  }

  get outputs(): UpdateProposalTransactionsCall__Outputs {
    return new UpdateProposalTransactionsCall__Outputs(this);
  }
}

export class UpdateProposalTransactionsCall__Inputs {
  _call: UpdateProposalTransactionsCall;

  constructor(call: UpdateProposalTransactionsCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get targets(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get signatures(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get calldatas(): Array<Bytes> {
    return this._call.inputValues[4].value.toBytesArray();
  }

  get updateMessage(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class UpdateProposalTransactionsCall__Outputs {
  _call: UpdateProposalTransactionsCall;

  constructor(call: UpdateProposalTransactionsCall) {
    this._call = call;
  }
}

export class VetoCall extends ethereum.Call {
  get inputs(): VetoCall__Inputs {
    return new VetoCall__Inputs(this);
  }

  get outputs(): VetoCall__Outputs {
    return new VetoCall__Outputs(this);
  }
}

export class VetoCall__Inputs {
  _call: VetoCall;

  constructor(call: VetoCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VetoCall__Outputs {
  _call: VetoCall;

  constructor(call: VetoCall) {
    this._call = call;
  }
}

export class WithdrawDAONounsFromEscrowCall extends ethereum.Call {
  get inputs(): WithdrawDAONounsFromEscrowCall__Inputs {
    return new WithdrawDAONounsFromEscrowCall__Inputs(this);
  }

  get outputs(): WithdrawDAONounsFromEscrowCall__Outputs {
    return new WithdrawDAONounsFromEscrowCall__Outputs(this);
  }
}

export class WithdrawDAONounsFromEscrowCall__Inputs {
  _call: WithdrawDAONounsFromEscrowCall;

  constructor(call: WithdrawDAONounsFromEscrowCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawDAONounsFromEscrowCall__Outputs {
  _call: WithdrawDAONounsFromEscrowCall;

  constructor(call: WithdrawDAONounsFromEscrowCall) {
    this._call = call;
  }
}

export class WithdrawFromForkEscrowCall extends ethereum.Call {
  get inputs(): WithdrawFromForkEscrowCall__Inputs {
    return new WithdrawFromForkEscrowCall__Inputs(this);
  }

  get outputs(): WithdrawFromForkEscrowCall__Outputs {
    return new WithdrawFromForkEscrowCall__Outputs(this);
  }
}

export class WithdrawFromForkEscrowCall__Inputs {
  _call: WithdrawFromForkEscrowCall;

  constructor(call: WithdrawFromForkEscrowCall) {
    this._call = call;
  }

  get tokenIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class WithdrawFromForkEscrowCall__Outputs {
  _call: WithdrawFromForkEscrowCall;

  constructor(call: WithdrawFromForkEscrowCall) {
    this._call = call;
  }
}
